/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package org.iids.aos.agents.TMTAGENTMonitorized;

import java.io.File;
import java.lang.reflect.Field;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import org.iids.aos.AsStartup;
import org.iids.aos.agent.Agent;
import org.iids.aos.gui.Util;
import org.iids.aos.webservices.axisstub.WSStubber;
import org.iids.aos.webservices.wsdl.TMTLegalBrokerServiceService.*;
import org.iids.aos.webservices.wsdl.TMTContextServiceService.*;
import org.iids.aos.webservices.wsdl.TMTUserModellerServiceService.*;
import org.iids.aos.webservices.wsdl.TMTCinemaServiceService.*;
import org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.*;
import java.io.FileWriter;
import java.io.BufferedWriter;

import java.util.Date;
import java.text.SimpleDateFormat;

import org.iids.aos.exception.AgentScapeException;

import javax.swing.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.*;

import java.io.Serializable;
import java.util.Map;
import java.util.Hashtable;
import java.util.Vector;

import net.sf.ictalive.eventbus.EventBus;
import alive.EventModel.Fact.SendAct;
import alive.EventModel.Event.Actor;
import alive.EventModel.Event.EventFactory;
import alive.EventModel.Event.Event;
import alive.EventModel.Fact.FactFactory;
import org.eclipse.emf.ecore.EObject;
import alive.EventModel.Fact.Content;
import opera.OM.Atom;
import opera.OM.OMFactory;
import alive.EventModel.Fact.Message;
import alive.EventModel.Fact.Fact;
import net.sf.ictalive.eventbus.exception.EventBusConnectionException;

/**
 * Agent to invoke TMT's services This Agent is hardcoded. The plan's workflow
 * of actions is hardcoded into the agent's code, as well as the services
 * invoked. To generalize this agent, the GPGP planner and the matchmaker are to
 * be integrated. However, this agent is usefull to check the correctness of the
 * services coded and to show how can they be combined toghether
 */

public class TMTAGENTMonitorized extends Agent {

    public class NewJFrame extends javax.swing.JFrame {

	/** Creates new form NewJFrame */
	public NewJFrame() {
	    initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

	    jPanel3 = new javax.swing.JPanel();
	    jLabel3 = new javax.swing.JLabel();
	    jPanel1 = new javax.swing.JPanel();
	    jLabel1 = new javax.swing.JLabel();
	    jLabel5 = new javax.swing.JLabel();
	    userAgeField = new javax.swing.JTextField();
	    userLocationField = new javax.swing.JTextField();
	    jLabel6 = new javax.swing.JLabel();
	    jPanel6 = new javax.swing.JPanel();
	    jLabel7 = new javax.swing.JLabel();
	    MovieGenreField = new javax.swing.JTextField();
	    jLabel8 = new javax.swing.JLabel();
	    MovieRateField = new javax.swing.JTextField();
	    jLabel9 = new javax.swing.JLabel();
	    jPanel7 = new javax.swing.JPanel();
	    jLabel10 = new javax.swing.JLabel();
	    RestaurantTypeField = new javax.swing.JTextField();
	    jLabel11 = new javax.swing.JLabel();
	    RestaurantRateField = new javax.swing.JTextField();
	    jLabel12 = new javax.swing.JLabel();
	    RestaurantCostField = new javax.swing.JTextField();
	    jLabel13 = new javax.swing.JLabel();
	    jLabel14 = new javax.swing.JLabel();
	    UserRequirementsField = new javax.swing.JTextField();
	    jLabel15 = new javax.swing.JLabel();
	    CurrentTimeField = new javax.swing.JTextField();
	    jLabel16 = new javax.swing.JLabel();
	    CurrentWeatherField = new javax.swing.JTextField();
	    jLabel17 = new javax.swing.JLabel();
	    LegalAdultAgeField = new javax.swing.JTextField();
	    jPanel2 = new javax.swing.JPanel();
	    jLabel2 = new javax.swing.JLabel();
	    jLabel18 = new javax.swing.JLabel();
	    MovieNameResultField = new javax.swing.JTextField();
	    jLabel19 = new javax.swing.JLabel();
	    MovieRateResultField = new javax.swing.JTextField();
	    MovieGenreResultField = new javax.swing.JTextField();
	    jLabel20 = new javax.swing.JLabel();
	    jLabel21 = new javax.swing.JLabel();
	    MoviePremierDateResultField = new javax.swing.JTextField();
	    jLabel22 = new javax.swing.JLabel();
	    jLabel23 = new javax.swing.JLabel();
	    MovieLengthResultField = new javax.swing.JTextField();
	    jLabel24 = new javax.swing.JLabel();
	    CinemaNameResultField = new javax.swing.JTextField();
	    jLabel25 = new javax.swing.JLabel();
	    CinemaAdressResultField = new javax.swing.JTextField();
	    CinemaCostResultField = new javax.swing.JTextField();
	    jLabel26 = new javax.swing.JLabel();
	    CinemaRateResultField = new javax.swing.JTextField();
	    jLabel27 = new javax.swing.JLabel();
	    CinemaDistrictResultField = new javax.swing.JTextField();
	    jLabel28 = new javax.swing.JLabel();
	    CinemaFacilitiesResultField = new javax.swing.JTextField();
	    jLabel29 = new javax.swing.JLabel();
	    CinemaAccesResultField = new javax.swing.JTextField();
	    jLabel30 = new javax.swing.JLabel();
	    jScrollPane2 = new javax.swing.JScrollPane();
	    MovieSinopsisResultField = new javax.swing.JTextArea();
	    jPanel4 = new javax.swing.JPanel();
	    jLabel4 = new javax.swing.JLabel();
	    jScrollPane1 = new javax.swing.JScrollPane();
	    ExecutionLog = new javax.swing.JTextArea();
	    jPanel5 = new javax.swing.JPanel();
	    GoButton = new javax.swing.JButton();
	    userNameField = new javax.swing.JTextField();
	    KillButton = new javax.swing.JButton();
	    jPanel8 = new javax.swing.JPanel();
	    jLabel31 = new javax.swing.JLabel();
	    jLabel32 = new javax.swing.JLabel();
	    RestaurantNameResultField = new javax.swing.JTextField();
	    jLabel33 = new javax.swing.JLabel();
	    RestaurantTypeResultField = new javax.swing.JTextField();
	    RestaurantRateResultField = new javax.swing.JTextField();
	    jLabel34 = new javax.swing.JLabel();
	    jLabel35 = new javax.swing.JLabel();
	    RestaurantPhoneResultField = new javax.swing.JTextField();
	    jLabel36 = new javax.swing.JLabel();
	    jLabel37 = new javax.swing.JLabel();
	    RestaurantAccesResultField = new javax.swing.JTextField();
	    jLabel38 = new javax.swing.JLabel();
	    RestaurantAdressResultField = new javax.swing.JTextField();
	    jLabel39 = new javax.swing.JLabel();
	    RestaurantCostResultField = new javax.swing.JTextField();
	    RestaurantFacilitiesResultField = new javax.swing.JTextField();
	    jLabel40 = new javax.swing.JLabel();
	    RestaurantOpeningHoursResultField = new javax.swing.JTextField();
	    jLabel41 = new javax.swing.JLabel();
	    RestaurantDistrictResultField = new javax.swing.JTextField();
	    jLabel42 = new javax.swing.JLabel();
	    jScrollPane3 = new javax.swing.JScrollPane();
	    RestaurantDescriptionResultField = new javax.swing.JTextArea();
	    jLabel43 = new javax.swing.JLabel();

	    jPanel3.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    jLabel3.setText("Result");

	    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
		    jPanel3);
	    jPanel3.setLayout(jPanel3Layout);
	    jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(
		    javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		    jPanel3Layout.createSequentialGroup().addComponent(jLabel3)
			    .addContainerGap(282, Short.MAX_VALUE)));
	    jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(
		    javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		    jPanel3Layout.createSequentialGroup().addComponent(jLabel3)
			    .addContainerGap(189, Short.MAX_VALUE)));

	    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

	    jPanel1.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    jLabel1.setText("User");

	    jLabel5.setText("UserAge");

	    userAgeField.addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent evt) {
		    userAgeFieldActionPerformed(evt);
		}
	    });

	    userLocationField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    userLocationFieldActionPerformed(evt);
			}
		    });

	    jLabel6.setText("UserLocation");

	    jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

	    jLabel7.setText("UserCinemaPreferences");

	    MovieGenreField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieGenreFieldActionPerformed(evt);
			}
		    });

	    jLabel8.setText("MovieGenre");

	    MovieRateField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieRateFieldActionPerformed(evt);
			}
		    });

	    jLabel9.setText("MovieRate");

	    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(
		    jPanel6);
	    jPanel6.setLayout(jPanel6Layout);
	    jPanel6Layout
		    .setHorizontalGroup(jPanel6Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel6Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel6Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel7)
							    .addGroup(
								    jPanel6Layout
									    .createSequentialGroup()
									    .addGroup(
										    jPanel6Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    jLabel8)
											    .addComponent(
												    jLabel9))
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addGroup(
										    jPanel6Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING,
												    false)
											    .addComponent(
												    MovieRateField)
											    .addComponent(
												    MovieGenreField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    201,
												    Short.MAX_VALUE))))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));
	    jPanel6Layout
		    .setVerticalGroup(jPanel6Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel6Layout
					    .createSequentialGroup()
					    .addComponent(jLabel7)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
					    .addGroup(
						    jPanel6Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel8)
							    .addComponent(
								    MovieGenreField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel6Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel9)
							    .addComponent(
								    MovieRateField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

	    jLabel10.setText("UserRestaurantPreferences");

	    RestaurantTypeField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantTypeFieldActionPerformed(evt);
			}
		    });

	    jLabel11.setText("RestaurantType");

	    RestaurantRateField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantRateFieldActionPerformed(evt);
			}
		    });

	    jLabel12.setText("RestaurantRate");

	    RestaurantCostField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantCostFieldActionPerformed(evt);
			}
		    });

	    jLabel13.setText("RestaurantCost");

	    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(
		    jPanel7);
	    jPanel7.setLayout(jPanel7Layout);
	    jPanel7Layout
		    .setHorizontalGroup(jPanel7Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel7Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel7Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel10)
							    .addGroup(
								    jPanel7Layout
									    .createSequentialGroup()
									    .addGroup(
										    jPanel7Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    jLabel11)
											    .addComponent(
												    jLabel12)
											    .addComponent(
												    jLabel13))
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addGroup(
										    jPanel7Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    RestaurantCostField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    178,
												    Short.MAX_VALUE)
											    .addComponent(
												    RestaurantRateField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    178,
												    Short.MAX_VALUE)
											    .addComponent(
												    RestaurantTypeField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    178,
												    Short.MAX_VALUE))))
					    .addContainerGap()));
	    jPanel7Layout
		    .setVerticalGroup(jPanel7Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel7Layout
					    .createSequentialGroup()
					    .addComponent(jLabel10)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
					    .addGroup(
						    jPanel7Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel11)
							    .addComponent(
								    RestaurantTypeField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel7Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel12)
							    .addComponent(
								    RestaurantRateField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED,
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)
					    .addGroup(
						    jPanel7Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel13)
							    .addComponent(
								    RestaurantCostField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addContainerGap()));

	    jLabel14.setText("UserRequirements");

	    UserRequirementsField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    UserRequirementsFieldActionPerformed(evt);
			}
		    });

	    jLabel15.setText("CurrentTime");

	    CurrentTimeField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CurrentTimeFieldActionPerformed(evt);
			}
		    });

	    jLabel16.setText("CurrentWeather");

	    CurrentWeatherField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CurrentWeatherFieldActionPerformed(evt);
			}
		    });

	    jLabel17.setText("LegalAdultAge");

	    LegalAdultAgeField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    LegalAdultAgeFieldActionPerformed(evt);
			}
		    });

	    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
		    jPanel1);
	    jPanel1.setLayout(jPanel1Layout);
	    jPanel1Layout
		    .setHorizontalGroup(jPanel1Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel1Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel1)
							    .addGroup(
								    jPanel1Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addGroup(
										    jPanel1Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.TRAILING,
												    false)
											    .addComponent(
												    jPanel7,
												    javax.swing.GroupLayout.Alignment.LEADING,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    Short.MAX_VALUE)
											    .addComponent(
												    jPanel6,
												    javax.swing.GroupLayout.Alignment.LEADING,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    Short.MAX_VALUE)))
							    .addGroup(
								    jPanel1Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addGroup(
										    jPanel1Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.TRAILING)
											    .addGroup(
												    javax.swing.GroupLayout.Alignment.LEADING,
												    jPanel1Layout
													    .createSequentialGroup()
													    .addGroup(
														    jPanel1Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    jLabel14)
															    .addComponent(
																    jLabel15)
															    .addComponent(
																    jLabel16)
															    .addComponent(
																    jLabel17))
													    .addPreferredGap(
														    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
													    .addGroup(
														    jPanel1Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING,
																    false)
															    .addComponent(
																    LegalAdultAgeField)
															    .addComponent(
																    CurrentWeatherField)
															    .addComponent(
																    CurrentTimeField)
															    .addComponent(
																    UserRequirementsField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    197,
																    Short.MAX_VALUE)))
											    .addGroup(
												    javax.swing.GroupLayout.Alignment.LEADING,
												    jPanel1Layout
													    .createSequentialGroup()
													    .addGroup(
														    jPanel1Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    jLabel5)
															    .addComponent(
																    jLabel6))
													    .addPreferredGap(
														    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
													    .addGroup(
														    jPanel1Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING,
																    false)
															    .addComponent(
																    userAgeField)
															    .addComponent(
																    userLocationField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    220,
																    Short.MAX_VALUE))))))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));
	    jPanel1Layout
		    .setVerticalGroup(jPanel1Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel1Layout
					    .createSequentialGroup()
					    .addComponent(jLabel1)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel1Layout
									    .createSequentialGroup()
									    .addComponent(
										    userAgeField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    userLocationField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE))
							    .addGroup(
								    jPanel1Layout
									    .createSequentialGroup()
									    .addComponent(
										    jLabel5)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jLabel6)))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addComponent(
						    jPanel6,
						    javax.swing.GroupLayout.PREFERRED_SIZE,
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    javax.swing.GroupLayout.PREFERRED_SIZE)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addComponent(
						    jPanel7,
						    javax.swing.GroupLayout.PREFERRED_SIZE,
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    javax.swing.GroupLayout.PREFERRED_SIZE)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel14)
							    .addComponent(
								    UserRequirementsField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel15)
							    .addComponent(
								    CurrentTimeField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel16)
							    .addComponent(
								    CurrentWeatherField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel1Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel17)
							    .addComponent(
								    LegalAdultAgeField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    jPanel2.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    jLabel2.setText("Cinema Result");

	    jLabel18.setText("MovieName");

	    MovieNameResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieNameResultFieldActionPerformed(evt);
			}
		    });

	    jLabel19.setText("MovieRate");

	    MovieRateResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieRateResultFieldActionPerformed(evt);
			}
		    });

	    MovieGenreResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieGenreResultFieldActionPerformed(evt);
			}
		    });

	    jLabel20.setText("MovieGenre");

	    jLabel21.setText("MoviePremierDate");

	    MoviePremierDateResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MoviePremierDateResultFieldActionPerformed(evt);
			}
		    });

	    jLabel22.setText("MovieSinopsis");

	    jLabel23.setText("MovieLength");

	    MovieLengthResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    MovieLengthResultFieldActionPerformed(evt);
			}
		    });

	    jLabel24.setText("CinemaName");

	    CinemaNameResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaNameResultFieldActionPerformed(evt);
			}
		    });

	    jLabel25.setText("CinemaAdress");

	    CinemaAdressResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaAdressResultFieldActionPerformed(evt);
			}
		    });

	    CinemaCostResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaCostResultFieldActionPerformed(evt);
			}
		    });

	    jLabel26.setText("CinemaCost");

	    CinemaRateResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaRateResultFieldActionPerformed(evt);
			}
		    });

	    jLabel27.setText("CinemaRate");

	    CinemaDistrictResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaDistrictResultFieldActionPerformed(evt);
			}
		    });

	    jLabel28.setText("CinemaDistrict");

	    CinemaFacilitiesResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaFacilitiesResultFieldActionPerformed(evt);
			}
		    });

	    jLabel29.setText("CinemaFacilities");

	    CinemaAccesResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    CinemaAccesResultFieldActionPerformed(evt);
			}
		    });

	    jLabel30.setText("CinemaAcces");

	    MovieSinopsisResultField.setColumns(20);
	    MovieSinopsisResultField.setRows(5);
	    jScrollPane2.setViewportView(MovieSinopsisResultField);

	    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(
		    jPanel2);
	    jPanel2.setLayout(jPanel2Layout);
	    jPanel2Layout
		    .setHorizontalGroup(jPanel2Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel2Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel2)
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addGroup(
										    jPanel2Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    jLabel26)
											    .addComponent(
												    jLabel27)
											    .addComponent(
												    jLabel28)
											    .addComponent(
												    jLabel29)
											    .addComponent(
												    jLabel30)
											    .addComponent(
												    jLabel23)
											    .addComponent(
												    jLabel24)
											    .addComponent(
												    jLabel25))
									    .addGap(18,
										    18,
										    18)
									    .addGroup(
										    jPanel2Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    MovieLengthResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    238,
												    Short.MAX_VALUE)
											    .addComponent(
												    CinemaNameResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    238,
												    Short.MAX_VALUE)
											    .addComponent(
												    CinemaAdressResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    238,
												    Short.MAX_VALUE)
											    .addComponent(
												    CinemaCostResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    238,
												    Short.MAX_VALUE)
											    .addGroup(
												    jPanel2Layout
													    .createSequentialGroup()
													    .addGap(3,
														    3,
														    3)
													    .addGroup(
														    jPanel2Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    CinemaDistrictResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    235,
																    Short.MAX_VALUE)
															    .addComponent(
																    CinemaRateResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    235,
																    Short.MAX_VALUE)
															    .addComponent(
																    CinemaFacilitiesResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    235,
																    Short.MAX_VALUE)
															    .addComponent(
																    CinemaAccesResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    235,
																    Short.MAX_VALUE)))))
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addGroup(
										    jPanel2Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    jLabel21)
											    .addComponent(
												    jLabel20)
											    .addComponent(
												    jLabel19)
											    .addComponent(
												    jLabel18)
											    .addComponent(
												    jLabel22))
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addGroup(
										    jPanel2Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING,
												    false)
											    .addComponent(
												    MovieGenreResultField)
											    .addComponent(
												    MoviePremierDateResultField)
											    .addComponent(
												    jScrollPane2)
											    .addComponent(
												    MovieRateResultField)
											    .addComponent(
												    MovieNameResultField))))
					    .addContainerGap()));
	    jPanel2Layout
		    .setVerticalGroup(jPanel2Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel2Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.TRAILING)
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addComponent(
										    jLabel2)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jLabel18)
									    .addGap(13,
										    13,
										    13)
									    .addComponent(
										    jLabel19))
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addComponent(
										    MovieNameResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    MovieRateResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)))
					    .addGap(13, 13, 13)
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel20)
							    .addComponent(
								    MovieGenreResultField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel21)
							    .addComponent(
								    MoviePremierDateResultField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jScrollPane2,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE))
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addGap(50,
										    50,
										    50)
									    .addComponent(
										    jLabel22)))
					    .addGap(13, 13, 13)
					    .addGroup(
						    jPanel2Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addComponent(
										    jLabel23)
									    .addGap(13,
										    13,
										    13)
									    .addComponent(
										    jLabel24)
									    .addGap(13,
										    13,
										    13)
									    .addComponent(
										    jLabel25)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel26)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel27)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel28)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel29)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel30))
							    .addGroup(
								    jPanel2Layout
									    .createSequentialGroup()
									    .addComponent(
										    MovieLengthResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaNameResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaAdressResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaCostResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaRateResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaDistrictResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaFacilitiesResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    CinemaAccesResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    jPanel4.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    jLabel4.setText("Execution Log");

	    ExecutionLog.setColumns(20);
	    ExecutionLog.setRows(5);
	    jScrollPane1.setViewportView(ExecutionLog);

	    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(
		    jPanel4);
	    jPanel4.setLayout(jPanel4Layout);
	    jPanel4Layout
		    .setHorizontalGroup(jPanel4Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel4Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel4Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addComponent(
								    jLabel4)
							    .addComponent(
								    jScrollPane1,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    1092,
								    Short.MAX_VALUE))
					    .addContainerGap()));
	    jPanel4Layout
		    .setVerticalGroup(jPanel4Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel4Layout
					    .createSequentialGroup()
					    .addComponent(jLabel4)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addComponent(
						    jScrollPane1,
						    javax.swing.GroupLayout.PREFERRED_SIZE,
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    javax.swing.GroupLayout.PREFERRED_SIZE)
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    jPanel5.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    GoButton.setText("Run");
	    GoButton.addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent evt) {
		    GoButtonActionPerformed(evt);
		}
	    });

	    userNameField.setText("Ignasi 'The Brave'");
	    userNameField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    userNameFieldActionPerformed(evt);
			}
		    });

	    KillButton.setText("Kill");
	    KillButton.addActionListener(new java.awt.event.ActionListener() {
		public void actionPerformed(java.awt.event.ActionEvent evt) {
		    KillButtonActionPerformed(evt);
		}
	    });

	    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(
		    jPanel5);
	    jPanel5.setLayout(jPanel5Layout);
	    jPanel5Layout
		    .setHorizontalGroup(jPanel5Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel5Layout
					    .createSequentialGroup()
					    .addContainerGap()
					    .addComponent(GoButton)
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addComponent(
						    userNameField,
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    951, Short.MAX_VALUE)
					    .addGap(18, 18, 18)
					    .addComponent(KillButton)
					    .addContainerGap()));
	    jPanel5Layout
		    .setVerticalGroup(jPanel5Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel5Layout
					    .createSequentialGroup()
					    .addContainerGap()
					    .addGroup(
						    jPanel5Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    GoButton)
							    .addComponent(
								    KillButton)
							    .addComponent(
								    userNameField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    jPanel8.setBorder(javax.swing.BorderFactory
		    .createBevelBorder(javax.swing.border.BevelBorder.RAISED));

	    jLabel31.setText("Restaurant Result");

	    jLabel32.setText("RestaurantName");

	    RestaurantNameResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantNameResultFieldActionPerformed(evt);
			}
		    });

	    jLabel33.setText("RestaurantType");

	    RestaurantTypeResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantTypeResultFieldActionPerformed(evt);
			}
		    });

	    RestaurantRateResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantRateResultFieldActionPerformed(evt);
			}
		    });

	    jLabel34.setText("RestaurantRate");

	    jLabel35.setText("RestaurantPhone");

	    RestaurantPhoneResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantPhoneResultFieldActionPerformed(evt);
			}
		    });

	    jLabel36.setText("Restaurant");

	    jLabel37.setText("RestaurantAcces");

	    RestaurantAccesResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantAccesResultFieldActionPerformed(evt);
			}
		    });

	    jLabel38.setText("RestaurantAdress");

	    RestaurantAdressResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantAdressResultFieldActionPerformed(evt);
			}
		    });

	    jLabel39.setText("RestaurantCost");

	    RestaurantCostResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantCostResultFieldActionPerformed(evt);
			}
		    });

	    RestaurantFacilitiesResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantFacilitiesResultFieldActionPerformed(evt);
			}
		    });

	    jLabel40.setText("RestaurantFacilities");

	    RestaurantOpeningHoursResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantOpeningHoursResultFieldActionPerformed(evt);
			}
		    });

	    jLabel41.setText("OpeningHours");

	    RestaurantDistrictResultField
		    .addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(
				java.awt.event.ActionEvent evt) {
			    RestaurantDistrictResultFieldActionPerformed(evt);
			}
		    });

	    jLabel42.setText("RestaurantDistrict");

	    RestaurantDescriptionResultField.setColumns(20);
	    RestaurantDescriptionResultField.setRows(5);
	    jScrollPane3.setViewportView(RestaurantDescriptionResultField);

	    jLabel43.setText("Description");

	    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(
		    jPanel8);
	    jPanel8.setLayout(jPanel8Layout);
	    jPanel8Layout
		    .setHorizontalGroup(jPanel8Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel8Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addGroup(
										    jPanel8Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    jLabel40)
											    .addComponent(
												    jLabel41)
											    .addComponent(
												    jLabel42)
											    .addComponent(
												    jLabel37)
											    .addComponent(
												    jLabel38)
											    .addComponent(
												    jLabel39))
									    .addGap(18,
										    18,
										    18)
									    .addGroup(
										    jPanel8Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addComponent(
												    RestaurantAccesResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    226,
												    Short.MAX_VALUE)
											    .addComponent(
												    RestaurantAdressResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    226,
												    Short.MAX_VALUE)
											    .addComponent(
												    RestaurantCostResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    226,
												    Short.MAX_VALUE)
											    .addComponent(
												    RestaurantFacilitiesResultField,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    226,
												    Short.MAX_VALUE)
											    .addGroup(
												    jPanel8Layout
													    .createSequentialGroup()
													    .addGap(3,
														    3,
														    3)
													    .addGroup(
														    jPanel8Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    RestaurantDistrictResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    223,
																    Short.MAX_VALUE)
															    .addComponent(
																    RestaurantOpeningHoursResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    223,
																    Short.MAX_VALUE)))))
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addGroup(
										    jPanel8Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addGroup(
												    jPanel8Layout
													    .createSequentialGroup()
													    .addContainerGap()
													    .addGroup(
														    jPanel8Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    jLabel35)
															    .addComponent(
																    jLabel34)
															    .addComponent(
																    jLabel33)
															    .addComponent(
																    jLabel32)))
											    .addComponent(
												    jLabel31)
											    .addGroup(
												    jPanel8Layout
													    .createSequentialGroup()
													    .addContainerGap()
													    .addGroup(
														    jPanel8Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    jLabel36)
															    .addComponent(
																    jLabel43))))
									    .addGroup(
										    jPanel8Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.LEADING)
											    .addGroup(
												    jPanel8Layout
													    .createSequentialGroup()
													    .addGap(19,
														    19,
														    19)
													    .addGroup(
														    jPanel8Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    RestaurantTypeResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    239,
																    Short.MAX_VALUE)
															    .addComponent(
																    RestaurantNameResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    239,
																    Short.MAX_VALUE)
															    .addComponent(
																    RestaurantRateResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    239,
																    Short.MAX_VALUE)))
											    .addGroup(
												    jPanel8Layout
													    .createSequentialGroup()
													    .addGap(18,
														    18,
														    18)
													    .addGroup(
														    jPanel8Layout
															    .createParallelGroup(
																    javax.swing.GroupLayout.Alignment.LEADING)
															    .addComponent(
																    jScrollPane3,
																    javax.swing.GroupLayout.PREFERRED_SIZE,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    javax.swing.GroupLayout.PREFERRED_SIZE)
															    .addComponent(
																    RestaurantPhoneResultField,
																    javax.swing.GroupLayout.DEFAULT_SIZE,
																    240,
																    Short.MAX_VALUE))))))
					    .addContainerGap()));
	    jPanel8Layout
		    .setVerticalGroup(jPanel8Layout
			    .createParallelGroup(
				    javax.swing.GroupLayout.Alignment.LEADING)
			    .addGroup(
				    jPanel8Layout
					    .createSequentialGroup()
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.TRAILING)
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addComponent(
										    jLabel31)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jLabel32)
									    .addGap(13,
										    13,
										    13)
									    .addGroup(
										    jPanel8Layout
											    .createParallelGroup(
												    javax.swing.GroupLayout.Alignment.BASELINE)
											    .addComponent(
												    jLabel33)
											    .addComponent(
												    RestaurantTypeResultField,
												    javax.swing.GroupLayout.PREFERRED_SIZE,
												    javax.swing.GroupLayout.DEFAULT_SIZE,
												    javax.swing.GroupLayout.PREFERRED_SIZE)))
							    .addGroup(
								    javax.swing.GroupLayout.Alignment.LEADING,
								    jPanel8Layout
									    .createSequentialGroup()
									    .addContainerGap()
									    .addComponent(
										    RestaurantNameResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)))
					    .addGap(13, 13, 13)
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel34)
							    .addComponent(
								    RestaurantRateResultField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addGap(13, 13, 13)
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.BASELINE)
							    .addComponent(
								    jLabel35)
							    .addComponent(
								    RestaurantPhoneResultField,
								    javax.swing.GroupLayout.PREFERRED_SIZE,
								    javax.swing.GroupLayout.DEFAULT_SIZE,
								    javax.swing.GroupLayout.PREFERRED_SIZE))
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jScrollPane3,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE))
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addGap(45,
										    45,
										    45)
									    .addComponent(
										    jLabel36)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    jLabel43)))
					    .addPreferredGap(
						    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
					    .addGroup(
						    jPanel8Layout
							    .createParallelGroup(
								    javax.swing.GroupLayout.Alignment.LEADING)
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addComponent(
										    jLabel37)
									    .addGap(13,
										    13,
										    13)
									    .addComponent(
										    jLabel38)
									    .addGap(13,
										    13,
										    13)
									    .addComponent(
										    jLabel39)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel40)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel41)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
									    .addComponent(
										    jLabel42))
							    .addGroup(
								    jPanel8Layout
									    .createSequentialGroup()
									    .addComponent(
										    RestaurantAccesResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    RestaurantAdressResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    RestaurantCostResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    RestaurantFacilitiesResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    RestaurantOpeningHoursResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)
									    .addPreferredGap(
										    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									    .addComponent(
										    RestaurantDistrictResultField,
										    javax.swing.GroupLayout.PREFERRED_SIZE,
										    javax.swing.GroupLayout.DEFAULT_SIZE,
										    javax.swing.GroupLayout.PREFERRED_SIZE)))
					    .addContainerGap(
						    javax.swing.GroupLayout.DEFAULT_SIZE,
						    Short.MAX_VALUE)));

	    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
		    getContentPane());
	    getContentPane().setLayout(layout);
	    layout.setHorizontalGroup(layout
		    .createParallelGroup(
			    javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(
			    layout.createSequentialGroup()
				    .addContainerGap()
				    .addGroup(
					    layout.createParallelGroup(
						    javax.swing.GroupLayout.Alignment.TRAILING,
						    false)
						    .addGroup(
							    javax.swing.GroupLayout.Alignment.LEADING,
							    layout.createSequentialGroup()
								    .addComponent(
									    jPanel1,
									    javax.swing.GroupLayout.PREFERRED_SIZE,
									    javax.swing.GroupLayout.DEFAULT_SIZE,
									    javax.swing.GroupLayout.PREFERRED_SIZE)
								    .addPreferredGap(
									    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								    .addComponent(
									    jPanel2,
									    javax.swing.GroupLayout.PREFERRED_SIZE,
									    javax.swing.GroupLayout.DEFAULT_SIZE,
									    javax.swing.GroupLayout.PREFERRED_SIZE)
								    .addPreferredGap(
									    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								    .addComponent(
									    jPanel8,
									    javax.swing.GroupLayout.PREFERRED_SIZE,
									    javax.swing.GroupLayout.DEFAULT_SIZE,
									    javax.swing.GroupLayout.PREFERRED_SIZE))
						    .addComponent(
							    jPanel5,
							    javax.swing.GroupLayout.Alignment.LEADING,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    Short.MAX_VALUE)
						    .addComponent(
							    jPanel4,
							    javax.swing.GroupLayout.Alignment.LEADING,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    Short.MAX_VALUE))
				    .addContainerGap(391, Short.MAX_VALUE)));
	    layout.setVerticalGroup(layout
		    .createParallelGroup(
			    javax.swing.GroupLayout.Alignment.LEADING)
		    .addGroup(
			    layout.createSequentialGroup()
				    .addContainerGap()
				    .addGroup(
					    layout.createParallelGroup(
						    javax.swing.GroupLayout.Alignment.LEADING)
						    .addComponent(
							    jPanel2,
							    javax.swing.GroupLayout.PREFERRED_SIZE,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    javax.swing.GroupLayout.PREFERRED_SIZE)
						    .addComponent(
							    jPanel8,
							    javax.swing.GroupLayout.PREFERRED_SIZE,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    javax.swing.GroupLayout.PREFERRED_SIZE)
						    .addComponent(
							    jPanel1,
							    javax.swing.GroupLayout.PREFERRED_SIZE,
							    javax.swing.GroupLayout.DEFAULT_SIZE,
							    javax.swing.GroupLayout.PREFERRED_SIZE))
				    .addPreferredGap(
					    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				    .addComponent(
					    jPanel4,
					    javax.swing.GroupLayout.PREFERRED_SIZE,
					    javax.swing.GroupLayout.DEFAULT_SIZE,
					    javax.swing.GroupLayout.PREFERRED_SIZE)
				    .addPreferredGap(
					    javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				    .addComponent(
					    jPanel5,
					    javax.swing.GroupLayout.PREFERRED_SIZE,
					    javax.swing.GroupLayout.DEFAULT_SIZE,
					    javax.swing.GroupLayout.PREFERRED_SIZE)
				    .addContainerGap(
					    javax.swing.GroupLayout.DEFAULT_SIZE,
					    Short.MAX_VALUE)));

	    pack();
	}// </editor-fold>

	private void GoButtonActionPerformed(java.awt.event.ActionEvent evt) {
	    enactServiceChain();
	    if (userNameField.getText().equalsIgnoreCase("Ignasi 'The Brave'")) {
		while (MovieNameResultField.getText().equalsIgnoreCase(
			"No Movie found")
			|| RestaurantNameResultField.getText()
				.equalsIgnoreCase("No restaurant found")) {
		    enactServiceChain();
		}
	    }
	}

	private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void userAgeFieldActionPerformed(java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void userLocationFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieGenreFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieRateFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantTypeFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantRateFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantCostFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void UserRequirementsFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CurrentTimeFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CurrentWeatherFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void LegalAdultAgeFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieNameResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieRateResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieGenreResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MoviePremierDateResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void MovieLengthResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaNameResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaAdressResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaCostResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaRateResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaDistrictResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaFacilitiesResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void CinemaAccesResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantNameResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantTypeResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantRateResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantPhoneResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantAccesResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantAdressResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantCostResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantFacilitiesResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantOpeningHoursResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void RestaurantDistrictResultFieldActionPerformed(
		java.awt.event.ActionEvent evt) {
	    // TODO add your handling code here:
	}

	private void KillButtonActionPerformed(java.awt.event.ActionEvent evt) {
	    shutdown();
	}

	// Variables declaration - do not modify
	private javax.swing.JTextField CinemaAccesResultField;
	private javax.swing.JTextField CinemaAdressResultField;
	private javax.swing.JTextField CinemaCostResultField;
	private javax.swing.JTextField CinemaDistrictResultField;
	private javax.swing.JTextField CinemaFacilitiesResultField;
	private javax.swing.JTextField CinemaRateResultField;
	private javax.swing.JTextField CurrentTimeField;
	private javax.swing.JTextField CurrentWeatherField;
	private javax.swing.JTextArea ExecutionLog;
	private javax.swing.JButton GoButton;
	private javax.swing.JButton KillButton;
	private javax.swing.JTextField LegalAdultAgeField;
	private javax.swing.JTextField MovieGenreField;
	private javax.swing.JTextField MovieGenreResultField;
	private javax.swing.JTextField MovieLengthResultField;
	private javax.swing.JTextField MoviePremierDateResultField;
	private javax.swing.JTextField MovieRateField;
	private javax.swing.JTextField MovieRateResultField;
	private javax.swing.JTextArea MovieSinopsisResultField;
	private javax.swing.JTextField RestaurantAccesResultField;
	private javax.swing.JTextField RestaurantAdressResultField;
	private javax.swing.JTextField RestaurantCostField;
	private javax.swing.JTextField RestaurantCostResultField;
	private javax.swing.JTextArea RestaurantDescriptionResultField;
	private javax.swing.JTextField RestaurantDistrictResultField;
	private javax.swing.JTextField RestaurantFacilitiesResultField;
	private javax.swing.JTextField RestaurantNameResultField;
	private javax.swing.JTextField RestaurantOpeningHoursResultField;
	private javax.swing.JTextField RestaurantPhoneResultField;
	private javax.swing.JTextField RestaurantRateField;
	private javax.swing.JTextField RestaurantRateResultField;
	private javax.swing.JTextField RestaurantTypeField;
	private javax.swing.JTextField RestaurantTypeResultField;
	private javax.swing.JTextField UserRequirementsField;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel20;
	private javax.swing.JLabel jLabel21;
	private javax.swing.JLabel jLabel22;
	private javax.swing.JLabel jLabel23;
	private javax.swing.JLabel jLabel24;
	private javax.swing.JLabel jLabel25;
	private javax.swing.JLabel jLabel26;
	private javax.swing.JLabel jLabel27;
	private javax.swing.JLabel jLabel28;
	private javax.swing.JLabel jLabel29;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel30;
	private javax.swing.JLabel jLabel31;
	private javax.swing.JLabel jLabel32;
	private javax.swing.JLabel jLabel33;
	private javax.swing.JLabel jLabel34;
	private javax.swing.JLabel jLabel35;
	private javax.swing.JLabel jLabel36;
	private javax.swing.JLabel jLabel37;
	private javax.swing.JLabel jLabel38;
	private javax.swing.JLabel jLabel39;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel40;
	private javax.swing.JLabel jLabel41;
	private javax.swing.JLabel jLabel42;
	private javax.swing.JLabel jLabel43;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel4;
	private javax.swing.JPanel jPanel5;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JPanel jPanel8;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextField userAgeField;
	private javax.swing.JTextField CinemaNameResultField;
	private javax.swing.JTextField userLocationField;
	private javax.swing.JTextField userNameField;
	private javax.swing.JTextField MovieNameResultField;
	// End of variables declaration

    }

    // Locations of the WSDL files in the agent jar.
    public static final String LEGAL_BROKER_SERVICE_WSDL_FILE = "src/wsdl/wsgateway/TMTLegalBrokerServiceService.wsdl";
    public static final String USER_CONTEXT_SERVICE_WSDL_FILE = "src/wsdl/wsgateway/TMTContextServiceService.wsdl";
    public static final String USER_MODELLER_SERVICE_WSDL_FILE = "src/wsdl/wsgateway/TMTUserModellerServiceService.wsdl";
    public static final String CINEMA_SERVICE_WSDL_FILE = "src/wsdl/wsgateway/TMTCinemaServiceService.wsdl";
    public static final String RESTAURANT_SERVICE_WSDL_FILE = "src/wsdl/wsgateway/TMTRestaurantServiceService.wsdl";

    // the port types (operation) stubs
    private TMTLegalBrokerService LegalBrokerServiceStub;
    private TMTContextService TMTContextServiceServiceStub;
    private TMTUserModellerService UserModellerServiceServiceStub;
    private TMTCinemaService CinemaServiceStub;
    private TMTRestaurantService RestaurantServiceStub;

    private NewJFrame frame;

    /**
     * Get the stub of the TMT Legal broker service. Use a global variable to
     * avoid locating a located service
     * 
     * @return A stub implementing the Legal Broker service.
     */

    private void shutdown() {
	// invoke in a non-awt thread in case of errors..

	try {
	    kill();
	    frame.setVisible(false);
	    frame.dispose();
	    frame = null;
	} catch (AgentScapeException ex) {
	    log.error("Problem killing self", ex);
	}

    }

    private void assignLegalBrokerService() {
	if (LegalBrokerServiceStub == null)
	    try {
		logExecution(" 		+ Getting stub to access the Legal Broker Service \n");
		TMTLegalBrokerServiceServiceLocator locator = new TMTLegalBrokerServiceServiceLocator();

		File file = new File(AsStartup.getTopDir() + File.separator
			+ LEGAL_BROKER_SERVICE_WSDL_FILE);

		WSStubber stubber = new WSStubber(locator, file.toURL()
			.toString(), getPrimaryHandle(), getCurrentLocation());

		LegalBrokerServiceStub = (TMTLegalBrokerService) stubber
			.createStub(locator
				.getTMTLegalBrokerServicePortWSDDServiceName());
	    } catch (Exception e) {
		System.err
			.println("Exception creating stub: " + e.getMessage());
		e.printStackTrace();
	    }
    }

    /**
     * Get the stub of the Cinema service. Use a global variable to avoid
     * locating a located service
     * 
     * @return A stub implementing the Cinema service.
     */
    private void assignCinemaService() {
	if (CinemaServiceStub == null)
	    try {
		logExecution(" 		+ Getting stub to access the Cinema Service \n");
		TMTCinemaServiceServiceLocator locator = new TMTCinemaServiceServiceLocator();

		File file = new File(AsStartup.getTopDir() + File.separator
			+ CINEMA_SERVICE_WSDL_FILE);

		WSStubber stubber = new WSStubber(locator, file.toURL()
			.toString(), getPrimaryHandle(), getCurrentLocation());

		CinemaServiceStub = (TMTCinemaService) stubber
			.createStub(locator
				.getTMTCinemaServicePortWSDDServiceName());
	    } catch (Exception e) {
		System.err
			.println("Exception creating stub: " + e.getMessage());
		e.printStackTrace();
	    }
    }

    /**
     * Get the stub of the TMT Restaurant service. Use a global variable to
     * avoid locating a located service
     * 
     * @return A stub implementing the Restaurant service.
     */
    private void assignRestaurantService() {
	if (RestaurantServiceStub == null)
	    try {
		logExecution(" 		+ Getting stub to access the Restaurant Service \n");
		TMTRestaurantServiceServiceLocator locator = new TMTRestaurantServiceServiceLocator();

		File file = new File(AsStartup.getTopDir() + File.separator
			+ RESTAURANT_SERVICE_WSDL_FILE);

		WSStubber stubber = new WSStubber(locator, file.toURL()
			.toString(), getPrimaryHandle(), getCurrentLocation());

		RestaurantServiceStub = (TMTRestaurantService) stubber
			.createStub(locator
				.getTMTRestaurantServicePortWSDDServiceName());
	    } catch (Exception e) {
		System.err
			.println("Exception creating stub: " + e.getMessage());
		e.printStackTrace();
	    }
    }

    /**
     * Get the stub of the TMT Context service. Use a global variable to avoid
     * locating a located service
     * 
     * @return A stub implementing the Context service.
     */
    private void assignContextService() {
	if (TMTContextServiceServiceStub == null)
	    try {
		logExecution(" 		+ Getting stub to access the Context Manager Service \n");
		TMTContextServiceServiceLocator locator = new TMTContextServiceServiceLocator();

		File file = new File(AsStartup.getTopDir() + File.separator
			+ USER_CONTEXT_SERVICE_WSDL_FILE);

		WSStubber stubber = new WSStubber(locator, file.toURL()
			.toString(), getPrimaryHandle(), getCurrentLocation());

		TMTContextServiceServiceStub = (TMTContextService) stubber
			.createStub(locator
				.getTMTContextServicePortWSDDServiceName());
	    } catch (Exception e) {
		System.err
			.println("Exception creating stub: " + e.getMessage());
		e.printStackTrace();
	    }
    }

    /**
     * Get the stub of the TMT User modeller service. Use a global variable to
     * avoid locating a located service
     * 
     * @return A stub implementing the User modeller service.
     */
    private void assignUserModellerService() {
	if (UserModellerServiceServiceStub == null)
	    try {
		logExecution(" 		+ Getting stub to access the User Modeller Service \n");
		TMTUserModellerServiceServiceLocator locator = new TMTUserModellerServiceServiceLocator();

		File file = new File(AsStartup.getTopDir() + File.separator
			+ USER_MODELLER_SERVICE_WSDL_FILE);

		WSStubber stubber = new WSStubber(locator, file.toURL()
			.toString(), getPrimaryHandle(), getCurrentLocation());

		UserModellerServiceServiceStub = (TMTUserModellerService) stubber
			.createStub(locator
				.getTMTUserModellerServicePortWSDDServiceName());
	    } catch (Exception e) {
		System.err
			.println("Exception creating stub: " + e.getMessage());
		e.printStackTrace();
	    }
    }

    // Function to test if the service is working properly
    private void testGetLegalAdultAgeService() {
	try {

	    String result;

	    // get the services stub
	    assignLegalBrokerService();

	    System.err.println("<----- Try ------>");

	    result = this.LegalBrokerServiceStub
		    .getLegalAdultAge("Chikistan del sur");
	    System.err.println("� Result: " + result);
	    System.err.println("<---------------->");
	} catch (Exception e) {
	    e.printStackTrace();
	}

    }

    // Task to obtain user's location
    private String taskGetUserLocation(String userId)
	    throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignContextService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain user location \n");
	result = this.TMTContextServiceServiceStub.getUserLocation(userId);
	return result;
    }

    // Task to obtain current time
    private String taskGetCurrentTime() throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignContextService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain current time \n");
	result = this.TMTContextServiceServiceStub.getTime();
	return result;
    }

    // Task to obtain Weather forecast
    private String taskGetCurrentWeather(String location)
	    throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignContextService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain weather forecast for the next hours \n");
	result = this.TMTContextServiceServiceStub.getWeatherForecast(location);
	return result;
    }

    // Task to obtain user's age
    private String taskGetUserAge(String userId)
	    throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignUserModellerService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain user's age\n");
	result = this.UserModellerServiceServiceStub.getUserAge(userId);
	return result;
    }

    // Task to obtain user's cinema interests
    private org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests taskGetUserCinemaInterests(
	    String userId) throws java.rmi.RemoteException {
	org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests result;
	org.iids.aos.webservices.wsdl.TMTUserModellerServiceService.CinemaInterests dummy;

	// get the services stub
	assignUserModellerService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain user's cinema preferences \n");
	dummy = this.UserModellerServiceServiceStub
		.getUserCinemaInterests(userId);
	System.err.println("---> " + dummy.getGenre() + "|" + dummy.getRate());
	result = convertCinemaInterests(dummy);
	return result;
    }

    private org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests convertCinemaInterests(
	    org.iids.aos.webservices.wsdl.TMTUserModellerServiceService.CinemaInterests inParam) {
	org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests result = new org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests();
	result.setGenre(inParam.getGenre());
	result.setRate(inParam.getRate());

	return result;

    }

    // Task to obtain user's cinema requirements
    private String taskGetUserRequirements(String userId)
	    throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignUserModellerService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain user's requirements \n");
	result = this.UserModellerServiceServiceStub
		.getUserRequirements(userId);
	return result;
    }

    // Task to obtain user's restaurant interests
    private org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests taskGetUserRestaurantInterests(
	    String userId) throws java.rmi.RemoteException {
	org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests result;
	org.iids.aos.webservices.wsdl.TMTUserModellerServiceService.RestaurantInterests dummy;

	// get the services stub
	assignUserModellerService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain user's restaurant preferences \n");
	dummy = this.UserModellerServiceServiceStub
		.getUserRestaurantInterests(userId);
	System.err.println("---> " + dummy.getCost() + "|" + dummy.getRate()
		+ "|" + dummy.getLikes());
	result = convertRestaurantInterests(dummy);
	return result;
    }

    private org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests convertRestaurantInterests(
	    org.iids.aos.webservices.wsdl.TMTUserModellerServiceService.RestaurantInterests inParam) {
	org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests result = new org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests();
	result.setCost(inParam.getCost());
	result.setRate(inParam.getRate());
	result.setLikes(inParam.getLikes());

	return result;
    }

    // Task to obtain legal adult age
    private String taskGetlegalAdultAge(String location)
	    throws java.rmi.RemoteException {
	String result;

	// get the services stub
	assignLegalBrokerService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain minimum legal adult age \n");
	result = this.LegalBrokerServiceStub.getLegalAdultAge(location);
	return result;
    }

    // Task to obtain movie suggestion
    private MovieQueryResult taskGetMovieSuggestion(
	    String actualDate,
	    String actualLocation,
	    org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests userCinemaInterests,
	    String userCinemaRequirements) throws java.rmi.RemoteException {
	MovieQueryResult result;
	// get the services stub
	assignCinemaService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain a movie suggestion \n");
	result = this.CinemaServiceStub.getMovieSuggestion(actualDate,
		actualLocation, userCinemaInterests, userCinemaRequirements);
	return result;
    }

    // Task to obtain restaurant suggestion
    private RestaurantQueryResult taskGetRestuarantSuggestion(
	    String actualLocation,
	    org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests userRestaurantInterests,
	    String userRestaurantRequirements, String mealType,
	    String isUnderAge) throws java.rmi.RemoteException {
	RestaurantQueryResult result;
	// get the services stub
	assignRestaurantService();
	// and invoke
	logExecution(" 		+ Enacting service to obtain a restaurant suggestion \n");
	result = this.RestaurantServiceStub.getRestaurantSuggestion(
		actualLocation, userRestaurantInterests,
		userRestaurantRequirements, mealType, isUnderAge);
	return result;
    }

    // Task to state if it is lunch time
    private boolean evaluateLunchTime(String actualDate) {
	try {
	    logExecution(" 		+ Reasoning to decide if it is lunch time (between 13:00 and 16:00) \n");
	    String[] dummy = actualDate.split(" ");
	    SimpleDateFormat formatter = new SimpleDateFormat("HH:mm:ss");
	    Date date1 = formatter.parse("13:00:00");
	    Date date2 = formatter.parse(dummy[1]);
	    Date date3 = formatter.parse("16:00:00");
	    if (date2.after(date1) && date2.before(date3)) {
		return true;
	    }
	} catch (java.text.ParseException E) {
	    System.err.println("		� Date parsing exception thrown");
	}
	return false;
    }

    // Task to evaluate under-age property of an user
    private String isUnderAge(String userAge, String legalAge) {
	logExecution(" 		+ Reasoning to decide if user is legally underage \n");
	if (Integer.valueOf(userAge) >= Integer.valueOf(legalAge)) {
	    return "false";
	} else {
	    return "true";
	}
    }

    // Task to compose the output
    private String composeOutput(MovieQueryResult movieResult,
	    RestaurantQueryResult restaurantResult, boolean isLunchTime) {
	logExecution(" 		+ Composing results to provide them to the user \n");
	String res = "";
	if (movieResult.getMovieName().equalsIgnoreCase("No Movie found")) {
	    this.frame.MovieNameResultField.setText(movieResult.getMovieName());
	    this.frame.MovieRateResultField.setText("");
	    this.frame.MovieGenreResultField.setText("");
	    this.frame.MoviePremierDateResultField.setText("");
	    this.frame.MovieSinopsisResultField.setText("");
	    this.frame.MovieLengthResultField.setText("");
	    this.frame.CinemaAdressResultField.setText("");
	    this.frame.CinemaCostResultField.setText("");
	    this.frame.CinemaRateResultField.setText("");
	    this.frame.CinemaAccesResultField.setText("");
	    this.frame.CinemaDistrictResultField.setText("");
	    this.frame.CinemaFacilitiesResultField.setText("");
	    this.frame.CinemaNameResultField.setText("");
	    res = res + movieResult.getMovieName();
	} else {
	    this.frame.MovieNameResultField.setText(movieResult.getMovieName());
	    this.frame.MovieRateResultField.setText(movieResult.getMovieRate());
	    this.frame.MovieGenreResultField.setText(movieResult
		    .getMovieGenre());
	    this.frame.MoviePremierDateResultField.setText(movieResult
		    .getMovieFromDate());
	    this.frame.MovieSinopsisResultField.setText(movieResult
		    .getMovieSinopsis());
	    this.frame.MovieLengthResultField.setText(movieResult
		    .getMovieLength());
	    this.frame.CinemaAdressResultField.setText(movieResult
		    .getCinemaAdress());
	    this.frame.CinemaCostResultField.setText(movieResult
		    .getCinemaCost());
	    this.frame.CinemaRateResultField.setText(movieResult
		    .getCinemaRate());
	    this.frame.CinemaAccesResultField.setText(movieResult
		    .getCinemaAcces());
	    this.frame.CinemaDistrictResultField.setText(movieResult
		    .getCinemaDistrict());
	    this.frame.CinemaFacilitiesResultField.setText(movieResult
		    .getCinemaFacilities());
	    this.frame.CinemaNameResultField.setText(movieResult
		    .getCinemaName());

	    res = res + movieResult.getMovieName() + "|"
		    + movieResult.getMovieRate() + "|"
		    + movieResult.getMovieGenre() + "|"
		    + movieResult.getMovieFromDate() + "|"
		    + movieResult.getCinemaName() + "|"
		    + movieResult.getCinemaDistrict() + "|"
		    + movieResult.getCinemaFacilities();
	}
	try {
	    if (isLunchTime) {
		res = res + "\n";

		if (restaurantResult.getRestaurantName().equalsIgnoreCase(
			"No restaurant found")) {
		    this.frame.RestaurantAccesResultField.setText("");
		    this.frame.RestaurantAdressResultField.setText("");
		    this.frame.RestaurantCostResultField.setText("");
		    this.frame.RestaurantDescriptionResultField.setText("");
		    this.frame.RestaurantDescriptionResultField.setText("");
		    this.frame.RestaurantDistrictResultField.setText("");
		    this.frame.RestaurantFacilitiesResultField.setText("");
		    this.frame.RestaurantOpeningHoursResultField.setText("");
		    this.frame.RestaurantPhoneResultField.setText("");
		    this.frame.RestaurantRateResultField.setText("");
		    this.frame.RestaurantTypeResultField.setText("");
		    this.frame.RestaurantNameResultField
			    .setText(restaurantResult.getRestaurantName());

		    res = res + restaurantResult.getRestaurantName();
		} else {
		    this.frame.RestaurantAccesResultField
			    .setText(restaurantResult.getRestaurantAcces());
		    this.frame.RestaurantAdressResultField
			    .setText(restaurantResult.getRestaurantAdress());
		    this.frame.RestaurantCostResultField
			    .setText(restaurantResult.getRestaurantCost());
		    this.frame.RestaurantDescriptionResultField
			    .setText(restaurantResult
				    .getRestaurantDescription());
		    this.frame.RestaurantDistrictResultField
			    .setText(restaurantResult.getRestaurantDistrict());
		    this.frame.RestaurantFacilitiesResultField
			    .setText(restaurantResult.getRestaurantFacilities());
		    // this.frame.RestaurantNameResultField.setText(restaurantResult.getRestaurantGoogleMapsScript());
		    this.frame.RestaurantNameResultField
			    .setText(restaurantResult.getRestaurantName());
		    this.frame.RestaurantOpeningHoursResultField
			    .setText(restaurantResult
				    .getRestaurantOpeningHours());
		    this.frame.RestaurantPhoneResultField
			    .setText(restaurantResult.getRestaurantPhone());
		    this.frame.RestaurantRateResultField
			    .setText(restaurantResult.getRestaurantRate());
		    this.frame.RestaurantTypeResultField
			    .setText(restaurantResult.getRestaurantType());

		    res = res + restaurantResult.getRestaurantAcces() + "|"
			    + restaurantResult.getRestaurantAdress() + "|"
			    + restaurantResult.getRestaurantCost() + "|"
			    + restaurantResult.getRestaurantDescription() + "|"
			    + restaurantResult.getRestaurantDistrict() + "|"
			    + restaurantResult.getRestaurantFacilities() + "|"
			    + restaurantResult.getRestaurantGoogleMapsScript()
			    + "|" + restaurantResult.getRestaurantName() + "|"
			    + restaurantResult.getRestaurantOpeningHours()
			    + "|" + restaurantResult.getRestaurantPhone() + "|"
			    + restaurantResult.getRestaurantRate() + "|"
			    + restaurantResult.getRestaurantType();
		}
	    } else {
		this.frame.RestaurantAccesResultField.setText("");
		this.frame.RestaurantAdressResultField.setText("");
		this.frame.RestaurantCostResultField.setText("");
		this.frame.RestaurantDescriptionResultField.setText("");
		this.frame.RestaurantDescriptionResultField.setText("");
		this.frame.RestaurantDistrictResultField.setText("");
		this.frame.RestaurantFacilitiesResultField.setText("");
		this.frame.RestaurantOpeningHoursResultField.setText("");
		this.frame.RestaurantPhoneResultField.setText("");
		this.frame.RestaurantRateResultField.setText("");
		this.frame.RestaurantTypeResultField.setText("");
		this.frame.RestaurantNameResultField.setText("");
	    }
	} catch (java.lang.NullPointerException E) {
	    this.frame.RestaurantAccesResultField.setText("");
	    this.frame.RestaurantAdressResultField.setText("");
	    this.frame.RestaurantCostResultField.setText("");
	    this.frame.RestaurantDescriptionResultField.setText("");
	    this.frame.RestaurantDescriptionResultField.setText("");
	    this.frame.RestaurantDistrictResultField.setText("");
	    this.frame.RestaurantFacilitiesResultField.setText("");
	    this.frame.RestaurantOpeningHoursResultField.setText("");
	    this.frame.RestaurantPhoneResultField.setText("");
	    this.frame.RestaurantRateResultField.setText("");
	    this.frame.RestaurantTypeResultField.setText("");
	    this.frame.RestaurantNameResultField.setText("No restaurant found");
	}
	return res;
    }

    private EventBus eb;

    private void connectEventBus(String url) {
	try {
	    this.eb = new EventBus(url);
	} catch (EventBusConnectionException EE) {
	    System.err.println("EventBusConnectionException:'"
		    + EE.getMessage() + "'");
	}
    }

    private void Monitor(String cause, String concept, String from, String to) {
	Event dummyEvent;
	SendAct dummyFact;
	Actor senderAgent;
	Actor reciverAgent;
	Content dummyContent;
	Message dummyMess;
	Atom dummyAtom;

	// Start of the Russian Dolls game
	// Event to be sent
	dummyEvent = EventFactory.eINSTANCE.createEvent();
	// Fact inside the Content
	dummyFact = FactFactory.eINSTANCE.createSendAct();
	// Content inside the Event
	dummyContent = FactFactory.eINSTANCE.createContent();
	// Message inside the Fact
	dummyMess = FactFactory.eINSTANCE.createMessage();
	// Atom inside the message
	dummyAtom = OMFactory.eINSTANCE.createAtom();

	// Set cause and concept (typically 'Sent' and the message sent) into
	// the atom
	dummyAtom.setProposition(cause + " : " + concept);
	dummyMess.getObject().add(dummyAtom);
	// Put the message inside the fact
	dummyFact.setSendMessage(dummyMess);
	// Initialize sender and receiver using Agent's handlers
	senderAgent = EventFactory.eINSTANCE.createActor();
	senderAgent.setName(from);
	senderAgent.setUrl("localhost");
	reciverAgent = EventFactory.eINSTANCE.createActor();
	reciverAgent.setName(to);
	reciverAgent.setUrl("localhost");
	// Set sender and receiver in the fact
	dummyFact.setSender(senderAgent);
	dummyFact.setReceiver(reciverAgent);
	// Put the fact into the content
	dummyContent.setFact(dummyFact);
	// Put the content into the event
	dummyEvent.setContent(dummyContent);

	// Set aserter of the event
	dummyEvent.setAsserter(senderAgent);

	// Publish the event
	try {
	    this.eb.publish(dummyEvent);
	} catch (java.io.IOException E) {
	    System.err.println("IOException:'" + E.getMessage() + "'");
	}

    }

    private void logExecution(String log) {
	Monitor("TMTDEMOSTATE", log, "TMTAGENTMONITORIZED",
		"TMTAGENTMONITORIZED");
	this.frame.ExecutionLog.append(log);
    }

    private void enactServiceChain() {
	// Variables
	String userId = this.frame.userNameField.getText();
	String userAge;
	String userLocation;
	org.iids.aos.webservices.wsdl.TMTCinemaServiceService.CinemaInterests userCinemaInterests;
	String userRequirements;
	org.iids.aos.webservices.wsdl.TMTRestaurantServiceService.RestaurantInterests userRestaurantInterests = null;

	String currentTime;
	String currentWheather;

	String isUnderAge;
	boolean isLunchTime;

	String legalAdultAge;

	connectEventBus("localhost");

	MovieQueryResult movieSelection;
	RestaurantQueryResult restaurantSelection = null;
	this.frame.ExecutionLog.setText("");
	logExecution("<----- Starting service chain ------>\n");

	try {

	    // State 1 'content petition identified is reached'
	    logExecution(" � System is on state 'Content Petition Identified' \n");
	    // Corresponds to task1 'gather user personal data'
	    logExecution(" � Enacting task 'gather user personal data' \n");

	    userAge = taskGetUserAge(userId);
	    // End of Corresponds to task1 'gather user personal data'

	    // Corresponds to task2 'gather user context'
	    logExecution(" � Enacting task 'gather user context' \n");
	    if (this.frame.CurrentTimeField.getText().equalsIgnoreCase("")) {
		currentTime = taskGetCurrentTime();
	    }

	    else {
		logExecution(" 		+ Enacting service to obtain current time \n");
		currentTime = this.frame.CurrentTimeField.getText();
	    }
	    userLocation = taskGetUserLocation(userId);
	    // End of Corresponds to task2 'gather user context'

	    // State 2 'user data collected' is reached
	    logExecution(" � System is on state 'user data collected' \n");
	    // Corresponds to task 3 'gather external info'
	    logExecution(" � Enacting task 'gather external info' \n");
	    legalAdultAge = taskGetlegalAdultAge(userLocation);
	    // End of Corresponds to task 3 'gather external info'

	    // State 3 'external info collected' is reached
	    logExecution(" � System is on state 'external info collected' \n");
	    // Corresponds to task 4 'personalize content to be provided'
	    logExecution(" � Enacting task 'personalize content to be provided' \n");
	    isUnderAge = isUnderAge(userAge, legalAdultAge);
	    isLunchTime = evaluateLunchTime(currentTime);
	    if (isUnderAge.equalsIgnoreCase("true")) {
		logExecution(" � User is underage, he/she is not allowed on pubs \n");
	    } else {
		logExecution(" � User is not underage, he/she can perform any kind of activity \n");
	    }
	    if (isLunchTime) {
		logExecution(" � It is lunch time, system will suggest a restaurant \n");
	    } else {
		logExecution(" � It is not lunch time, system will not suggest a restaurant \n");
	    }
	    // End of Corresponds to task 4 'personalize content to be provided'
	    // State 4/8 is reached
	    if (isLunchTime) {
		logExecution(" � System is on state 'content to be provided personalised with lunch time' \n");
	    } else {
		logExecution(" � System is on state 'content to be provided personalised' \n");
	    }

	    // Corresponds to task 5/8
	    if (isLunchTime) {
		logExecution(" � Enacting task 'gather user preferences and requirements in content requested and restaurants' \n");
	    } else {
		logExecution(" � Enacting task 'gather user preferences and requirements in content requested' \n");
	    }

	    userCinemaInterests = taskGetUserCinemaInterests(userId);
	    userRequirements = taskGetUserRequirements(userId);
	    if (isLunchTime) {
		userRestaurantInterests = taskGetUserRestaurantInterests(userId);
	    }
	    // End of Corresponds to task 5/8
	    if (isLunchTime) {
		logExecution(" � System is on state 'user preferences and requirements in content requested and restaurants collected' \n");
	    } else {
		logExecution(" � System is on state 'user preferences and requirements in content requested collected' \n");
	    }

	    // Corresponds to task 6/9
	    if (isLunchTime) {
		logExecution(" � Enacting task 'collect content requested and restaurants from a suitable provider' \n");
	    } else {
		logExecution(" � Enacting task 'collect content requested from a suitable provider' \n");
	    }

	    movieSelection = taskGetMovieSuggestion(currentTime, userLocation,
		    userCinemaInterests, userRequirements);

	    this.frame.userAgeField.setText(userAge);
	    this.frame.MovieGenreField.setText(userCinemaInterests.getGenre());
	    this.frame.MovieRateField.setText(userCinemaInterests.getRate());
	    this.frame.UserRequirementsField.setText(userRequirements);
	    this.frame.CurrentTimeField.setText(currentTime);
	    this.frame.userLocationField.setText(userLocation);
	    this.frame.LegalAdultAgeField.setText(legalAdultAge);

	    if (isLunchTime) {
		this.frame.RestaurantTypeField.setText(userRestaurantInterests
			.getLikes());
		this.frame.RestaurantRateField.setText(userRestaurantInterests
			.getRate());
		this.frame.RestaurantCostField.setText(userRestaurantInterests
			.getCost());

		restaurantSelection = taskGetRestuarantSuggestion(userLocation,
			userRestaurantInterests, userRequirements, "lunch",
			isUnderAge);

	    }
	    // End of Corresponds to task 6/9

	    // State 6/10 is reached
	    if (isLunchTime) {
		logExecution(" � System is on state 'content requested and restaurant collected' \n");
	    } else {
		logExecution(" � System is on state 'content requested collected' \n");
	    }
	    // Corresponds to task 7/10
	    if (isLunchTime) {
		logExecution(" � Enacting task 'compose & provide content requested and restaurants' \n");
	    } else {
		logExecution(" � Enacting task 'compose & provide content requested' \n");
	    }
	    String result = composeOutput(movieSelection, restaurantSelection,
		    isLunchTime);
	    // End of Corresponds to task 7 'compose & provide content'

	    // State 7/11 is reached
	    if (isLunchTime) {
		logExecution(" � System is on state 'content requested and restaurants provided' \n");
	    } else {
		logExecution(" � System is on state 'content requested provided' \n");
	    }

	    System.err.println("		---------- ");
	    System.err.println("		� Result: " + result);
	} catch (java.rmi.RemoteException E) {
	    System.err.println("		� Remote exception thrown");
	}
	logExecution("<----------------> \n");
    }

    @Override
    public void run() {

	// enactServiceChain();
	// wait for agent to close..
	this.frame = new NewJFrame();
	this.frame.setVisible(true);
	waitForCompletion();
    }

    @Override
    protected void cleanUp() {
    }

}
