//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.10.07 at 04:10:50 PM CEST 
//

package eu.superhub.wp4.monitor.core.rules.drools.schema;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the
 * net.sf.ictalive.monitoring.rules.drools.schema package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Rhs_QNAME = new QName(
	    "http://drools.org/drools-5.0", "rhs");
    private final static QName _AndRestrictionConnective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "and-restriction-connective");
    private final static QName _AbstractConstraintConective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "abstractConstraintConective");
    private final static QName _Eval_QNAME = new QName(
	    "http://drools.org/drools-5.0", "eval");
    private final static QName _AndConditionalElement_QNAME = new QName(
	    "http://drools.org/drools-5.0", "and-conditional-element");
    private final static QName _OrRestrictionConnective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "or-restriction-connective");
    private final static QName _AbstractRestrictionConnective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "abstractRestrictionConnective");
    private final static QName _Expression_QNAME = new QName(
	    "http://drools.org/drools-5.0", "expression");
    private final static QName _OrConditionalElement_QNAME = new QName(
	    "http://drools.org/drools-5.0", "or-conditional-element");
    private final static QName _OrConstraintConnective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "or-constraint-connective");
    private final static QName _AndConstraintConnective_QNAME = new QName(
	    "http://drools.org/drools-5.0", "and-constraint-connective");
    private final static QName _AbstractConditionalElement_QNAME = new QName(
	    "http://drools.org/drools-5.0", "abstractConditionalElement");

    /**
     * Create a new ObjectFactory that can be used to create new instances of
     * schema derived classes for package:
     * net.sf.ictalive.monitoring.rules.drools.schema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AndConditionalElement }
     * 
     */
    public AndConditionalElement createAndConditionalElement() {
	return new AndConditionalElement();
    }

    /**
     * Create an instance of {@link VariableRestriction }
     * 
     */
    public VariableRestriction createVariableRestriction() {
	return new VariableRestriction();
    }

    /**
     * Create an instance of {@link OrConditionalElement }
     * 
     */
    public OrConditionalElement createOrConditionalElement() {
	return new OrConditionalElement();
    }

    /**
     * Create an instance of {@link Query }
     * 
     */
    public Query createQuery() {
	return new Query();
    }

    /**
     * Create an instance of {@link ConstraintConnectiveElementType }
     * 
     */
    public ConstraintConnectiveElementType createConstraintConnectiveElementType() {
	return new ConstraintConnectiveElementType();
    }

    /**
     * Create an instance of {@link Pattern }
     * 
     */
    public Pattern createPattern() {
	return new Pattern();
    }

    /**
     * Create an instance of {@link RuleAttribute }
     * 
     */
    public RuleAttribute createRuleAttribute() {
	return new RuleAttribute();
    }

    /**
     * Create an instance of {@link Global }
     * 
     */
    public Global createGlobal() {
	return new Global();
    }

    /**
     * Create an instance of {@link RestrictionElementType }
     * 
     */
    public RestrictionElementType createRestrictionElementType() {
	return new RestrictionElementType();
    }

    /**
     * Create an instance of {@link Predicate }
     * 
     */
    public Predicate createPredicate() {
	return new Predicate();
    }

    /**
     * Create an instance of {@link From }
     * 
     */
    public From createFrom() {
	return new From();
    }

    /**
     * Create an instance of {@link Importfunction }
     * 
     */
    public Importfunction createImportfunction() {
	return new Importfunction();
    }

    /**
     * Create an instance of {@link Collect }
     * 
     */
    public Collect createCollect() {
	return new Collect();
    }

    /**
     * Create an instance of {@link OrConstraintConnective }
     * 
     */
    public OrConstraintConnective createOrConstraintConnective() {
	return new OrConstraintConnective();
    }

    /**
     * Create an instance of {@link Exists }
     * 
     */
    public Exists createExists() {
	return new Exists();
    }

    /**
     * Create an instance of {@link ExternalFunction }
     * 
     */
    public ExternalFunction createExternalFunction() {
	return new ExternalFunction();
    }

    /**
     * Create an instance of {@link ReturnValueRestriction }
     * 
     */
    public ReturnValueRestriction createReturnValueRestriction() {
	return new ReturnValueRestriction();
    }

    /**
     * Create an instance of {@link Lhs }
     * 
     */
    public Lhs createLhs() {
	return new Lhs();
    }

    /**
     * Create an instance of {@link ConditionalElementType }
     * 
     */
    public ConditionalElementType createConditionalElementType() {
	return new ConditionalElementType();
    }

    /**
     * Create an instance of {@link FieldConstraint }
     * 
     */
    public FieldConstraint createFieldConstraint() {
	return new FieldConstraint();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
	return new Function();
    }

    /**
     * Create an instance of {@link AndRestrictionConnective }
     * 
     */
    public AndRestrictionConnective createAndRestrictionConnective() {
	return new AndRestrictionConnective();
    }

    /**
     * Create an instance of {@link Import }
     * 
     */
    public Import createImport() {
	return new Import();
    }

    /**
     * Create an instance of {@link Accumulate }
     * 
     */
    public Accumulate createAccumulate() {
	return new Accumulate();
    }

    /**
     * Create an instance of {@link FieldBinding }
     * 
     */
    public FieldBinding createFieldBinding() {
	return new FieldBinding();
    }

    /**
     * Create an instance of {@link QualifiedIdentifierRestriction }
     * 
     */
    public QualifiedIdentifierRestriction createQualifiedIdentifierRestriction() {
	return new QualifiedIdentifierRestriction();
    }

    /**
     * Create an instance of {@link Package }
     * 
     */
    public Package createPackage() {
	return new Package();
    }

    /**
     * Create an instance of {@link OrRestrictionConnective }
     * 
     */
    public OrRestrictionConnective createOrRestrictionConnective() {
	return new OrRestrictionConnective();
    }

    /**
     * Create an instance of {@link Parameter }
     * 
     */
    public Parameter createParameter() {
	return new Parameter();
    }

    /**
     * Create an instance of {@link Not }
     * 
     */
    public Not createNot() {
	return new Not();
    }

    /**
     * Create an instance of {@link AndConstraintConnective }
     * 
     */
    public AndConstraintConnective createAndConstraintConnective() {
	return new AndConstraintConnective();
    }

    /**
     * Create an instance of {@link Forall }
     * 
     */
    public Forall createForall() {
	return new Forall();
    }

    /**
     * Create an instance of {@link Rule }
     * 
     */
    public Rule createRule() {
	return new Rule();
    }

    /**
     * Create an instance of {@link LiteralRestriction }
     * 
     */
    public LiteralRestriction createLiteralRestriction() {
	return new LiteralRestriction();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "rhs")
    public JAXBElement<String> createRhs(String value) {
	return new JAXBElement<String>(_Rhs_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link AndRestrictionConnective }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "and-restriction-connective", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractRestrictionConnective")
    public JAXBElement<AndRestrictionConnective> createAndRestrictionConnective(
	    AndRestrictionConnective value) {
	return new JAXBElement<AndRestrictionConnective>(
		_AndRestrictionConnective_QNAME,
		AndRestrictionConnective.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link ConstraintConnectiveElementType }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "abstractConstraintConective")
    public JAXBElement<ConstraintConnectiveElementType> createAbstractConstraintConective(
	    ConstraintConnectiveElementType value) {
	return new JAXBElement<ConstraintConnectiveElementType>(
		_AbstractConstraintConective_QNAME,
		ConstraintConnectiveElementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "eval")
    public JAXBElement<String> createEval(String value) {
	return new JAXBElement<String>(_Eval_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link AndConditionalElement }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "and-conditional-element", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractConditionalElement")
    public JAXBElement<AndConditionalElement> createAndConditionalElement(
	    AndConditionalElement value) {
	return new JAXBElement<AndConditionalElement>(
		_AndConditionalElement_QNAME, AndConditionalElement.class,
		null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link OrRestrictionConnective }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "or-restriction-connective", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractRestrictionConnective")
    public JAXBElement<OrRestrictionConnective> createOrRestrictionConnective(
	    OrRestrictionConnective value) {
	return new JAXBElement<OrRestrictionConnective>(
		_OrRestrictionConnective_QNAME, OrRestrictionConnective.class,
		null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link RestrictionElementType }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "abstractRestrictionConnective")
    public JAXBElement<RestrictionElementType> createAbstractRestrictionConnective(
	    RestrictionElementType value) {
	return new JAXBElement<RestrictionElementType>(
		_AbstractRestrictionConnective_QNAME,
		RestrictionElementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "expression")
    public JAXBElement<String> createExpression(String value) {
	return new JAXBElement<String>(_Expression_QNAME, String.class, null,
		value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link OrConditionalElement }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "or-conditional-element", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractConditionalElement")
    public JAXBElement<OrConditionalElement> createOrConditionalElement(
	    OrConditionalElement value) {
	return new JAXBElement<OrConditionalElement>(
		_OrConditionalElement_QNAME, OrConditionalElement.class, null,
		value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link OrConstraintConnective }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "or-constraint-connective", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractConstraintConective")
    public JAXBElement<OrConstraintConnective> createOrConstraintConnective(
	    OrConstraintConnective value) {
	return new JAXBElement<OrConstraintConnective>(
		_OrConstraintConnective_QNAME, OrConstraintConnective.class,
		null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link AndConstraintConnective }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "and-constraint-connective", substitutionHeadNamespace = "http://drools.org/drools-5.0", substitutionHeadName = "abstractConstraintConective")
    public JAXBElement<AndConstraintConnective> createAndConstraintConnective(
	    AndConstraintConnective value) {
	return new JAXBElement<AndConstraintConnective>(
		_AndConstraintConnective_QNAME, AndConstraintConnective.class,
		null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}
     * {@link ConditionalElementType }{@code >}
     * 
     */
    @XmlElementDecl(namespace = "http://drools.org/drools-5.0", name = "abstractConditionalElement")
    public JAXBElement<ConditionalElementType> createAbstractConditionalElement(
	    ConditionalElementType value) {
	return new JAXBElement<ConditionalElementType>(
		_AbstractConditionalElement_QNAME,
		ConditionalElementType.class, null, value);
    }

}
