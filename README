Release notes:
  * wp4-monitor 0.0.2b
  * artifact-id eu.superhub.wp4
  * group-id    monitor

This component is the implementation of the Policy Monitor, a product of the task T3.3 of WP4 of the SuperHUB Project.

The main objectives of this component are:

This component is an evolution of the Local/Global Monitor that resulted from one of the tasks of the FP7 ALIVE project.
 For more information about the methodological use of the monitor, please check docs/MonitorArchitecture.pdf.
  For more information on the theoretical background that the implementation is based upon,
   please check http://link.springer.com/chapter/10.1007/978-3-642-21268-0_18

INSTALLATION
============

This component can be used as a JVM library by importing the jar bundles generated by Maven:

$ mvn clean install

osgi:install mvn:eu.superhub.wp4/monitor/0.0.2b

USAGE
=====

The main entry point of the Monitor component is the interface defined in the project Redmine and the D4.2 deliverable:

interface eu.superhub.wp4.monitor.iface.MonitorManager {
    public IMonitor createInstance(String host, int port);
    public Collection<IMonitor> listInstances();
    public void updateConfiguration(IMonitor m, Configuration c);
    public void start(IMonitor m);
    public void pause(IMonitor m);
    public void restart(IMonitor m);
    public void stop(IMonitor m);
    public OutputStream getOutputStream(IMonitor m);
    public int getCount(IMonitor im);
}

The implementation of this MonitorManager is currently object-instance based, although in future releases it might be deployed into Karaf.

An example of instantiation of the Monitor can be found at the PolicyIntegrationTestCase class in src/test/java.

DEPENDENCIES
============

From SuperHUB:
  * wp3-generic-marshaller
  * wp3-situational-data-provider
  * wp3-situational-data-model
  * wp4-simulator-api
  * wp4-encoder-server

External:
  * ActiveMQ SDK
  * EU-ALIVE
  * Eclipse EMF/GMF
  * JBoss Drools 5.0
  * Saxon
  * Clojure 1.5
  * MongoDB/congomongo
  * JSON/Jackson/data.json
